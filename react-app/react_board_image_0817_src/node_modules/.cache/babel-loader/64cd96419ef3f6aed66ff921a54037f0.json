{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dpfem\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Studying\\\\react-app\\\\react_board_image_0817_src\\\\src\\\\BoardWrite.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardWrite = _ref => {\n  _s();\n\n  let {\n    handlelist\n  } = _ref;\n  // 이미지 파일이름을 읽어오기 위해서 보드이미지 레프값을 추가했다.\n  const titleRef = useRef();\n  const writerRef = useRef();\n  const contentRef = useRef();\n  const imageRef = useRef();\n  const [image_name, setImage_name] = useState(\"\"); //업로드할 파일 정보를 저장하기위한 문장이다.\n\n  function onImage(e) {\n    // 파일업로드를 하기 위해서는 이벤트가 발생한 타겟의 파일을 읽어와야한다. 이벤트로 저장한 파일을 한번에 1개니까 배열순서 0번째가 되어야한다.\n    setImage_name(e.target.files[0]); //단순하게 파일이름만 입력시켜서는 업로드가 안된다 .\n  }\n\n  const handleInsert = e => {\n    // 이미지를 선택했는지 확인하는if문장이 추가 되었다. 이미지가 필수가 아니면 이프문장을 제외해도 되겠다.\n    console.log(\"handleInsert =>\", titleRef.current.value);\n    e.preventDefault();\n\n    if (titleRef.current.value === \"\" || titleRef.current.value === undefined) {\n      alert(\"제목을 입력하세요!!!\");\n      titleRef.current.focus();\n      return false;\n    }\n\n    if (writerRef.current.value === \"\" || writerRef.current.value === undefined) {\n      alert(\"글쓴이를 입력하세요!!!\");\n      writerRef.current.focus();\n      return false;\n    }\n\n    if (contentRef.current.value === \"\" || contentRef.current.value === undefined) {\n      alert(\"내용을 입력하세요!!!\");\n      contentRef.current.focus();\n      return false;\n    }\n\n    if (imageRef.current.value === \"\" || imageRef.current.value === undefined) {\n      alert(\"이미지를 선택하세요!!!\");\n      return false;\n    }\n\n    const config = {\n      //이미지를 첨부할때 아래의 콘텐트 타임 멀티파트 폼데이터를 적어줘야한다. 지금은 콘피그 객체로 전달을 한다.\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }; // const formData = new FormData();\n    // formData.append(\"image\", imageRef.current.value); 이미지 어팬드\n    // formData.append(\"title\", titleRef.current.value); 타이틀 어팬드  아무튼 아래와 같은 내용이다.\n    // alert(formData);\n\n    axios.post( // 파일 첨부할 떄 배열로 첨부한 이미지 파일을  이.타겟.파일이름을 가져오기로 설정해야 가져온다.\n    \"http://localhost:8008/insert\", {\n      title: titleRef.current.value,\n      writer: writerRef.current.value,\n      content: contentRef.current.value,\n      image: image_name\n    }, config // 옵션정보가 된다. 옵션정보에는 헤더에 담긴 정보가 전달된다. 아무튼 헤더에 멀티파트~~가 들어가는게 매우 중요하다.\n    ) // axios({ // 위의 호출 문장처럼 호출할 수 있는 다른문장이 있다. 객체를 사용해서 보내는 메서드에 포스트를 쓰면 엑시오스 포스트와 같은 방식으로 전달이 된다. 담아서 보내주 덷이터도 보내면 된다. axios,method,url,data는 변경하면 안된다. 이건 약속이다. key는 바꾸면 안된다.\n    //   headers: {\n    //     \"Content-Type\": \"multipart/form-data\",\n    //   },\n    //   url: \"http://localhost:8008/insert\", // 파일 업로드 요청 URL\n    //   method: \"POST\",\n    //   data: { //어팬드를 사용해서 이렇게 사용하는 방식도 존재한다. Line 52~54\n    //     title: titleRef.current.value,\n    //     writer: writerRef.current.value,\n    //     content: contentRef.current.value,\n    //     image: image_name,\n    //   },\n    // })\n    .then(res => {\n      console.log(\"handleInsert =>\", res);\n      handlelist();\n      titleRef.current.value = \"\";\n      writerRef.current.value = \"\";\n      contentRef.current.value = \"\";\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      encType: \"multipart/form-data\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        width: \"700px\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"100px\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            width: \"550px\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              size: \"68\",\n              ref: titleRef,\n              placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            width: \"100px\",\n            children: \"\\uAE00\\uC4F4\\uC774\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            width: \"550px\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"writer\",\n              size: \"68\",\n              ref: writerRef,\n              placeholder: \"\\uAE00\\uC4F4\\uC774\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\uB0B4\\uC6A9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"5\",\n              cols: \"70\",\n              name: \"content\",\n              ref: contentRef,\n              placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"image\",\n              ref: imageRef,\n              accept: \"image/*\",\n              onChange: onImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"\\uAE00\\uC4F0\\uAE30\",\n              onClick: handleInsert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"reset\",\n              value: \"\\uCDE8\\uC18C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BoardWrite, \"gStJSFY3t7ymODl7YoTiqjHDDVI=\");\n\n_c = BoardWrite;\nexport default BoardWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardWrite\");","map":{"version":3,"names":["useRef","useState","axios","BoardWrite","handlelist","titleRef","writerRef","contentRef","imageRef","image_name","setImage_name","onImage","e","target","files","handleInsert","console","log","current","value","preventDefault","undefined","alert","focus","config","headers","post","title","writer","content","image","then","res","catch","error"],"sources":["C:/Users/dpfem/OneDrive/바탕 화면/Studying/react-app/react_board_image_0817_src/src/BoardWrite.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BoardWrite = ({ handlelist }) => {\r\n  // 이미지 파일이름을 읽어오기 위해서 보드이미지 레프값을 추가했다.\r\n  const titleRef = useRef();\r\n  const writerRef = useRef();\r\n  const contentRef = useRef();\r\n  const imageRef = useRef();\r\n\r\n  const [image_name, setImage_name] = useState(\"\"); //업로드할 파일 정보를 저장하기위한 문장이다.\r\n\r\n  function onImage(e) {\r\n    // 파일업로드를 하기 위해서는 이벤트가 발생한 타겟의 파일을 읽어와야한다. 이벤트로 저장한 파일을 한번에 1개니까 배열순서 0번째가 되어야한다.\r\n    setImage_name(e.target.files[0]); //단순하게 파일이름만 입력시켜서는 업로드가 안된다 .\r\n  }\r\n\r\n  const handleInsert = (e) => {\r\n    // 이미지를 선택했는지 확인하는if문장이 추가 되었다. 이미지가 필수가 아니면 이프문장을 제외해도 되겠다.\r\n    console.log(\"handleInsert =>\", titleRef.current.value);\r\n    e.preventDefault();\r\n    if (titleRef.current.value === \"\" || titleRef.current.value === undefined) {\r\n      alert(\"제목을 입력하세요!!!\");\r\n      titleRef.current.focus();\r\n      return false;\r\n    }\r\n    if (\r\n      writerRef.current.value === \"\" ||\r\n      writerRef.current.value === undefined\r\n    ) {\r\n      alert(\"글쓴이를 입력하세요!!!\");\r\n      writerRef.current.focus();\r\n      return false;\r\n    }\r\n    if (\r\n      contentRef.current.value === \"\" ||\r\n      contentRef.current.value === undefined\r\n    ) {\r\n      alert(\"내용을 입력하세요!!!\");\r\n      contentRef.current.focus();\r\n      return false;\r\n    }\r\n    if (imageRef.current.value === \"\" || imageRef.current.value === undefined) {\r\n      alert(\"이미지를 선택하세요!!!\");\r\n      return false;\r\n    }\r\n\r\n    const config = {\r\n      //이미지를 첨부할때 아래의 콘텐트 타임 멀티파트 폼데이터를 적어줘야한다. 지금은 콘피그 객체로 전달을 한다.\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    };\r\n    // const formData = new FormData();\r\n    // formData.append(\"image\", imageRef.current.value); 이미지 어팬드\r\n    // formData.append(\"title\", titleRef.current.value); 타이틀 어팬드  아무튼 아래와 같은 내용이다.\r\n    // alert(formData);\r\n    axios\r\n      .post(\r\n        // 파일 첨부할 떄 배열로 첨부한 이미지 파일을  이.타겟.파일이름을 가져오기로 설정해야 가져온다.\r\n        \"http://localhost:8008/insert\",\r\n        {\r\n          title: titleRef.current.value,\r\n          writer: writerRef.current.value,\r\n          content: contentRef.current.value,\r\n          image: image_name,\r\n        },\r\n        config // 옵션정보가 된다. 옵션정보에는 헤더에 담긴 정보가 전달된다. 아무튼 헤더에 멀티파트~~가 들어가는게 매우 중요하다.\r\n      )\r\n      // axios({ // 위의 호출 문장처럼 호출할 수 있는 다른문장이 있다. 객체를 사용해서 보내는 메서드에 포스트를 쓰면 엑시오스 포스트와 같은 방식으로 전달이 된다. 담아서 보내주 덷이터도 보내면 된다. axios,method,url,data는 변경하면 안된다. 이건 약속이다. key는 바꾸면 안된다.\r\n      //   headers: {\r\n      //     \"Content-Type\": \"multipart/form-data\",\r\n      //   },\r\n      //   url: \"http://localhost:8008/insert\", // 파일 업로드 요청 URL\r\n      //   method: \"POST\",\r\n      //   data: { //어팬드를 사용해서 이렇게 사용하는 방식도 존재한다. Line 52~54\r\n      //     title: titleRef.current.value,\r\n      //     writer: writerRef.current.value,\r\n      //     content: contentRef.current.value,\r\n      //     image: image_name,\r\n      //   },\r\n      // })\r\n      .then((res) => {\r\n        console.log(\"handleInsert =>\", res);\r\n        handlelist();\r\n        titleRef.current.value = \"\";\r\n        writerRef.current.value = \"\";\r\n        contentRef.current.value = \"\";\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 아래 줄은 빼도 된다. 이게 필요하지만 위에서 미리 설정했기 때문에 삭제 가능 */}\r\n      <form encType=\"multipart/form-data\">\r\n        <table border=\"1\" width=\"700px\" align=\"center\">\r\n          <tr>\r\n            <td width=\"100px\">제목</td>\r\n            <td align=\"left\" width=\"550px\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                size=\"68\"\r\n                ref={titleRef}\r\n                placeholder=\"제목을 입력하세요\"\r\n              ></input>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td width=\"100px\">글쓴이</td>\r\n            <td align=\"left\" width=\"550px\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"writer\"\r\n                size=\"68\"\r\n                ref={writerRef}\r\n                placeholder=\"글쓴이를 입력하세요\"\r\n              ></input>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>내용</td>\r\n            <td align=\"left\">\r\n              <textarea\r\n                rows=\"5\"\r\n                cols=\"70\"\r\n                name=\"content\"\r\n                ref={contentRef}\r\n                placeholder=\"내용을 입력하세요\"\r\n              ></textarea>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {/* 추가된 구문이다. 엑셉트느 빼도 ㄱㅊ 온체인지가 중요하다. 온체인지 클릭하면 선택하고 바뀌면 이미지 파일 정보를 읽어와서 맨위에 있는 이.타겟.파일[0]을 서버로 이미지 이름을 전송하는것이다.  */}\r\n            {/* 파일을 하나만 선택해서 전송했으니까 배열헝식의 0번째 파일로 존재한다.  */}\r\n            <td>이미지</td>\r\n\r\n            <td align=\"left\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                ref={imageRef}\r\n                accept=\"image/*\"\r\n                onChange={onImage}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td colSpan=\"2\" align=\"center\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"글쓰기\"\r\n                onClick={handleInsert}\r\n              ></input>\r\n              &nbsp;\r\n              <input type=\"reset\" value=\"취소\"></input>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardWrite;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}